# GitLab CI configuration for MCP Server
stages:
  - test
  - security
  - deploy

# Cache node_modules for faster builds
.node_cache: &node_cache
  cache:
    key: 
      files:
        - package-lock.json
    paths:
      - node_modules/
    policy: pull-push

# Template for Node.js jobs
.node_job: &node_job
  image: node:${NODE_VERSION}
  <<: *node_cache
  before_script:
    - npm ci

# Test job that runs on multiple Node.js versions
test:
  <<: *node_job
  stage: test
  tags:
    - docker_runner-build
  parallel:
    matrix:
      - NODE_VERSION: ["17", "18", "20", "22"]
  script:
    - npm run lint --if-present
    - npm run build
    - npm run test:ci
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
    paths:
      - coverage/
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "default"

# Security audit job
security_audit:
  image: node:20
  <<: *node_cache
  stage: security
  tags:
    - docker_runner-build
  script:
    - npm audit --audit-level=moderate
  allow_failure: false
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "default"

# Sync to GitHub and publish to NPM on release tags
release_to_github_and_npm:
  stage: deploy
  image: node:20
  tags:
    - docker_runner-build
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  before_script:
    - npm ci
    - git config --global user.email "ci@name.systems"
    - git config --global user.name "GitLab CI"
    - git remote add github https://oauth2:${GITHUB_TOKEN}@github.com/namedotcom/namecom-mcp.git
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
  script:
    # Build and test
    - npm run build
    - npm run test:ci
    # Sync to GitHub
    - echo "Syncing tag ${CI_COMMIT_TAG} to GitHub..."
    - git push github HEAD:main --force-with-lease
    - git push github ${CI_COMMIT_TAG}
    # Publish to NPM
    - echo "Publishing version ${CI_COMMIT_TAG} to NPM..."
    - npm publish --access public
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
  needs:
    - test
    - security_audit 